lv.coefs.7 <- lv.coefs[,grep(',8]', colnames(lv.coefs))]
lv.coefs.8 <- lv.coefs[,grep(',9]', colnames(lv.coefs))]
lv.coefs.9 <- lv.coefs[,grep(',10]', colnames(lv.coefs))]
lv <- samples[,grep('lv', colnames(samples))]
lv <- lv[,-grep('coefs', colnames(lv))]
lv.1 <- lv[,grep(',1]', colnames(lv))]
lv.2 <- lv[,grep(',2]', colnames(lv))]
lv.3 <- lv[,grep(',3]', colnames(lv))]
lv.4 <- lv[,grep(',4]', colnames(lv))]
lv.5 <- lv[,grep(',5]', colnames(lv))]
lv.6 <- lv[,grep(',6]', colnames(lv))]
lv.7 <- lv[,grep(',7]', colnames(lv))]
lv.8 <- lv[,grep(',8]', colnames(lv))]
lv.9 <- lv[,grep(',9]', colnames(lv))]
nmcmc <- nrow(lv.coefs.1)
nsites <- ncol(lv.1)
nind <- ncol(lv.coefs.1)
X <- array(dim = c(nsites, nind, nmcmc))
(lv.coefs.1[i,] %*% t(lv.1[i,]))
df <- data.frame(x = c(1,2), b = c(1,2))
df
df + df
ttt <- list
ttt[[1]] <- df
ttt
ttt <- list()
ttt[[1]] <- df
ttt[[2]] <- df
do.call(sum, ttt)
x <- Reduce("+", lapply(tmp3, "[[", 1:ncol(tmp3[[1]])))
x <- Reduce("+", lapply(tmp3))
x <- Reduce("+", lapply(tmp3, '[['))
x <- Reduce("+", lapply(tmp3, '[[', c(1:ncol(tmp3[[1]]))))
x <- Reduce("+", tmp3)
X[,,i] <- t(x) #convention to have rows as sites
#Now apply over samples to get median and quantiles
system.time(Xmedian <- apply(X, c(1,2), median)) # takes a few minutes
Xlwr <- apply(X, c(1,2), quantile, probs = 0.025)
x
X
t(x)
i
system.time(
for (i in 1:nmcmc){ #loop over samples
tmp3 <- list()
for(k in 1:num_lv){
tmp3[[k]] <- (as.matrix(tmp[[k]])[i,] %*% t(as.matrix(tmp2[[k]])[i,]))
}
x <- Reduce("+", tmp3)
X[,,i] <- t(x) #convention to have rows as sites
}
)
pred <- get_predictions(x = m1) # note, 'get_predictions' only works for 10LVs. TODO: update so this is an argument that can be manipulated
pred2 <- get_predictions(x = m2)
comp <- data.frame(x_pred = pred$X10, x_pred_mnar = pred2$X10,
x_raw = data$X10, x_mnar = data_mnar$X10)
head(comp)
ggplot() +
geom_point(data = filter(comp, !is.na(x_mnar)),
aes(x = x_raw, y = x_pred_mnar), alpha = 0.75) +
geom_point(data = filter(comp, is.na(x_mnar)),
aes(x = x_raw, y = x_pred_mnar), alpha = 0.75, col = 'red') +
ylab('Predicted values with 50% missing not at random') +
xlab('Observed values') +
theme_classic()
library(MASS)
library(tidyverse)
library(R2jags)
library(boral)
source('scripts/helpers/get_predictions.R')
set.seed(123)
num_variables <- 20 # number of response variables
sample_size <- 100 # sample size
cov_matrix <- matrix(runif(num_variables^2, min=-0.5, max=0.5), nrow=num_variables, ncol=num_variables)
cov_matrix <- t(cov_matrix) %*% cov_matrix # make it a valid covariance matrix
data <- data.frame(mvrnorm(n=sample_size, mu=rep(0,num_variables), Sigma=cov_matrix))
data_mnar <- data %>%
mutate(X10 = ifelse(X10 > quantile(X10, 0.5), NA, X10)) #%>%
i <- 10 # sets the number (~ half number of indicators)
m1 <- boral(as.matrix(data), family = 'normal',
row.eff = "none",
lv.control = list(num.lv = i),
mcmc.control = list(n.burnin = 2000, n.iteration = 50000,
n.thin = 5, seed = 123),
save.model = TRUE)
m2 <- boral(as.matrix(data_mnar), family = 'normal',
row.eff = "none",
lv.control = list(num.lv = i),
mcmc.control = list(n.burnin = 2000, n.iteration = 50000,
n.thin = 5, seed = 123),
save.model = TRUE)
pred <- get_predictions(x = m1) # note, 'get_predictions' only works for 10LVs. TODO: update so this is an argument that can be manipulated
pred <- get_predictions(x = m1, num_lv = 10) # note, 'get_predictions' only works for 10LVs. TODO: update so this is an argument that can be manipulated
pred2 <- get_predictions(x = m2, num_lv = 10)
comp <- data.frame(x_pred = pred$X10, x_pred_mnar = pred2$X10,
x_raw = data$X10, x_mnar = data_mnar$X10)
head(comp)
ggplot() +
geom_point(data = filter(comp, !is.na(x_mnar)),
aes(x = x_raw, y = x_pred_mnar), alpha = 0.75) +
geom_point(data = filter(comp, is.na(x_mnar)),
aes(x = x_raw, y = x_pred_mnar), alpha = 0.75, col = 'red') +
ylab('Predicted values with 50% missing not at random') +
xlab('Observed values') +
theme_classic()
cor(comp$x_raw, comp$x_pred)^2 # R2 without mnar
cor(comp$x_raw, comp$x_pred_mnar)^2 # R2 with mnar
sqrt(mean((comp$x_raw - comp$x_pred)^2)) # rmse without mnar
sqrt(mean((comp$x_raw - comp$x_pred_mnar)^2)) # rmse with mnar
ggsave('outputs/sim-mnar2.png', width = 6, height = 4)
library(MASS)
library(tidyverse)
library(R2jags)
library(boral)
source('scripts/helpers/get_predictions.R')
set.seed(123)
num_variables <- 20 # number of response variables
sample_size <- 100 # sample size
cov_matrix <- matrix(runif(num_variables^2, min=-0.5, max=0.5), nrow=num_variables, ncol=num_variables)
cov_matrix <- t(cov_matrix) %*% cov_matrix # make it a valid covariance matrix
data <- data.frame(mvrnorm(n=sample_size, mu=rep(0,num_variables), Sigma=cov_matrix))
data_mnar <- data %>%
mutate(X10 = ifelse(X10 > quantile(X10, 0.5), NA, X10)) #%>%
i <- 10 # sets the number (~ half number of indicators)
m1 <- boral(as.matrix(data), family = 'normal',
row.eff = "none",
lv.control = list(num.lv = i),
mcmc.control = list(n.burnin = 2000, n.iteration = 50000,
n.thin = 5, seed = 123),
save.model = TRUE)
m2 <- boral(as.matrix(data_mnar), family = 'normal',
row.eff = "none",
lv.control = list(num.lv = i),
mcmc.control = list(n.burnin = 2000, n.iteration = 50000,
n.thin = 5, seed = 123),
save.model = TRUE)
source('scripts/helpers/get_predictions_v2.R')
pred <- get_predictions(x = m1, num_lv = 10)
library(tidyverse)
library(tmap)
library(sf)
sf_use_s2(FALSE)
library(RColorBrewer)
data('World')
dat <- read.csv('outputs/final.df.csv')
dat2 <- read.csv('outputs/norams-df.csv') %>%
rename('Cluster_norams' = 'Enabling.profile') %>%
mutate(Cluster_norams2 = ifelse(Cluster_norams == 5, 4, Cluster_norams),
Cluster_norams2 = ifelse(Cluster_norams == 4, 5, Cluster_norams2))
dat3 <- read.csv('outputs/nospend-df.csv') %>%
rename('Cluster_nospend' = 'Enabling.profile') %>%
mutate(Cluster_nospend2 = ifelse(Cluster_nospend == 4, 2, Cluster_nospend),
Cluster_nospend2 = ifelse(Cluster_nospend == 2, 5, Cluster_nospend2),
Cluster_nospend2 = ifelse(Cluster_nospend == 5, 4, Cluster_nospend2))
pal <- brewer.pal(9, 'YlGnBu')
pal <- pal[c(2,3,5,6,8,9)]
world.clust <- World %>%
left_join(dat2, by = 'iso_a3') %>%
filter(!is.na(Country)) %>%
st_transform(crs = 4326) %>%
st_crop(xmin = -180, ymin = -60, xmax = 180, ymax = 90) %>%
st_transform(crs = '+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m no_defs')
World <- World %>%
st_transform(crs = 4326) %>%
st_crop(xmin = -180, ymin = -60, xmax = 180, ymax = 90) %>%
st_transform(crs = '+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m no_defs')
tmap_mode('plot')
m <- tm_shape(World) +
tm_fill(col = 'lightgrey') +
tm_shape(world.clust) +
tm_fill(col = 'Cluster_norams2', style = 'cat',
palette = pal,
legend.is.portrait=FALSE) +
tm_borders(col = 'white', lwd = 0.05) +
tm_layout(legend.outside = TRUE,
legend.outside.position = "bottom",
legend.position = c(0.5, 0.8),
legend.title.size = 0.9,
legend.text.size = 0.8,
frame = FALSE)
m
tmap_save(m, 'outputs/Fig1A_norams.png', width = 8, height = 6)
# no conservation spending
# get full spatial df with model results and merge by country
world.clust <- World %>%
left_join(dat3, by = 'iso_a3') %>%
filter(!is.na(Country)) %>%
st_transform(crs = 4326) %>%
st_crop(xmin = -180, ymin = -60, xmax = 180, ymax = 90) %>%
st_transform(crs = '+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m no_defs')
World <- World %>%
st_transform(crs = 4326) %>%
st_crop(xmin = -180, ymin = -60, xmax = 180, ymax = 90) %>%
st_transform(crs = '+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m no_defs')
tmap_mode('plot')
head(dat)
head(dat2)
dat4 <- select(dat, Country, Enabling.profile) %>%
left_join(select(dat2, Country, Cluster_norams)) %>%
left_join(select(dat3, Country, Cluster_nospending))
dat4 <- select(dat, Country, Enabling.profile) %>%
left_join(select(dat2, Country, Cluster_norams)) %>%
left_join(select(dat3, Country, Cluster_nospend))
head(dat4)
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(dat4[i,'Enabling.profile'] == Enabling.profile, 1, 0))
i <-
1
dat4[i,'Enabling.profile']
i
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0))
head(dat5)
tmp <- list()
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0))
head(dat5)
for(i in 1:nrow(dat)){
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0))
tmp[[i]] <- dat5
}
head(dat5)
df <- data.frame(Country = NA, prop_change_norams = NA, prop_change_nospend = NA)
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0)) %>%
mutate(mean_norams = Enabling.profile + Cluster_norams/2,
mean_nosoend = Enabling.profile + Cluster_nospend/2)
head(dat5)
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0)) %>%
mutate(mean_norams = (Enabling.profile + Cluster_norams)/2,
mean_nosoend = (Enabling.profile + Cluster_nospend)/2)
head(dat5)
df <- data.frame(Country = NA, prop_change_norams = NA, prop_change_nospend = NA)
for(i in 1:nrow(dat)){
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0)) %>%
mutate(mean_norams = (Enabling.profile + Cluster_norams)/2,
mean_nospend = (Enabling.profile + Cluster_nospend)/2)
df[i,1] <- dat4[i, 'Country']
df[i,2] <- nrow(filter(dat5, mean_norams == 0.5))/nrow(dat5)
df[i,2] <- nrow(filter(dat5, mean_nospend == 0.5))/nrow(dat5)
}
df
df <- data.frame(Country = NA, prop_change_norams = NA, prop_change_nospend = NA)
for(i in 1:nrow(dat)){
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0)) %>%
mutate(mean_norams = (Enabling.profile + Cluster_norams)/2,
mean_nospend = (Enabling.profile + Cluster_nospend)/2)
df[i,1] <- dat4[i, 'Country']
df[i,2] <- nrow(filter(dat5, mean_norams == 0.5))/nrow(dat5)
df[i,3] <- nrow(filter(dat5, mean_nospend == 0.5))/nrow(dat5)
}
df
library(tidyverse)
library(tidyverse)
dat <- read.csv('outputs/final.df.csv')
dat2 <- read.csv('outputs/norams-df.csv') %>%
rename('Cluster_norams' = 'Enabling.profile')
dat3 <- read.csv('outputs/nospend-df.csv') %>%
rename('Cluster_nospend' = 'Enabling.profile')
dat4 <- select(dat, Country, Enabling.profile) %>%
left_join(select(dat2, Country, Cluster_norams)) %>%
left_join(select(dat3, Country, Cluster_nospend))
df <- data.frame(Country = NA, prop_change_norams = NA, prop_change_nospend = NA)
for(i in 1:nrow(dat)){
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0)) %>%
mutate(mean_norams = (Enabling.profile + Cluster_norams)/2,
mean_nospend = (Enabling.profile + Cluster_nospend)/2)
df[i,1] <- dat4[i, 'Country']
df[i,2] <- nrow(filter(dat5, mean_norams == 0.5))/nrow(dat5)
df[i,3] <- nrow(filter(dat5, mean_nospend == 0.5))/nrow(dat5)
}
head(df)
?geom_histogram
df <- data.frame(Country = NA, `No Ramsar Management` = NA, `No Conservation spending` = NA)
for(i in 1:nrow(dat)){
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0)) %>%
mutate(mean_norams = (Enabling.profile + Cluster_norams)/2,
mean_nospend = (Enabling.profile + Cluster_nospend)/2)
df[i,1] <- dat4[i, 'Country']
df[i,2] <- nrow(filter(dat5, mean_norams == 0.5))/nrow(dat5)
df[i,3] <- nrow(filter(dat5, mean_nospend == 0.5))/nrow(dat5)
}
head(df)
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending, names_to = 'indicator', values_to = 'stat')
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) %>%
geom_histogram() %>%
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) %>%
geom_histogram() +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram() +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 100) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 1) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 10) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 39) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 0.5) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 0.002) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 0.003) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 0.03) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 0.01) +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 0.01) +
xlab('Proportion of country pairwise clustering differences relative to full model')+
ylab('Number of countries') +
facet_wrap(~indicator) +
theme_classic()
ggsave('outputs/pairwise-clustering-differences.png')
ggsave('outputs/pairwise-clustering-differences.png', width = 6, height = 4)
ggsave('outputs/pairwise-clustering-differences.png', width = 6, height = 2)
library(tidyverse)
dat <- read.csv('outputs/final.df.csv')
dat2 <- read.csv('outputs/norams-df.csv') %>%
rename('Cluster_norams' = 'Enabling.profile')
dat3 <- read.csv('outputs/nospend-df.csv') %>%
rename('Cluster_nospend' = 'Enabling.profile')
dat4 <- select(dat, Country, Enabling.profile) %>%
left_join(select(dat2, Country, Cluster_norams)) %>%
left_join(select(dat3, Country, Cluster_nospend))
df <- data.frame(Country = NA, `No Ramsar Management` = NA, `No Conservation spending` = NA)
for(i in 1:nrow(dat)){
dat5 <- dat4 %>%
mutate(Enabling.profile = ifelse(Enabling.profile == dat4[i,'Enabling.profile'], 1, 0),
Cluster_norams = ifelse(Cluster_norams == dat4[i,'Enabling.profile'], 1, 0),
Cluster_nospend = ifelse(Cluster_nospend == dat4[i,'Enabling.profile'], 1, 0)) %>%
mutate(mean_norams = (Enabling.profile + Cluster_norams)/2,
mean_nospend = (Enabling.profile + Cluster_nospend)/2)
df[i,1] <- dat4[i, 'Country']
df[i,2] <- nrow(filter(dat5, mean_norams == 0.5))/nrow(dat5)
df[i,3] <- nrow(filter(dat5, mean_nospend == 0.5))/nrow(dat5)
}
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = stat)) +
geom_histogram(binwidth = 0.01) +
xlab('Proportion of country pairwise clustering differences relative to full model')+
ylab('Number of countries') +
facet_wrap(~indicator) +
theme_classic()
ggsave('outputs/pairwise-clustering-differences.png', width = 6, height = 2)
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = indicator, y = stat)) +
geom_boxplot() +
xlab('Proportion of country pairwise clustering differences relative to full model')+
ylab('Number of countries') +
facet_wrap(~indicator) +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = indicator, y = stat)) +
geom_boxplot() +
xlab('Proportion of country pairwise clustering differences relative to full model')+
ylab('Number of countries') +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = indicator, y = stat)) +
geom_boxplot() +
xlab('')+
ylab('Proportion of country pairwise clustering differences relative to full model') +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = indicator, y = stat)) +
geom_boxplot() +
xlab('')+
ylab('Proportion of country pairwise clustering differences relative to full model') +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = indicator, y = stat)) +
geom_boxplot() +
geom_jitter() +
xlab('')+
ylab('Proportion of country pairwise clustering differences relative to full model') +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = indicator, y = stat)) +
geom_violin() +
geom_jitter() +
xlab('')+
ylab('Proportion of country pairwise clustering differences relative to full model') +
theme_classic()
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = indicator, y = stat)) +
geom_violin() +
xlab('')+
ylab('Proportion of country pairwise clustering differences relative to full model') +
theme_classic()
ggsave('outputs/pairwise-clustering-differences_violin.png', width = 3, height = 4)
ggsave('outputs/pairwise-clustering-differences_violin.png', width = 4, height = 5)
df %>%
pivot_longer(cols = No.Ramsar.Management:No.Conservation.spending,
names_to = 'indicator', values_to = 'stat') %>%
ggplot(aes(x = indicator, y = stat)) +
geom_violin() +
xlab('')+
ylab('Proportion of country pairwise clustering differences') +
theme_classic()
ggsave('outputs/pairwise-clustering-differences_violin.png', width = 4, height = 5)
ggsave('outputs/pairwise-clustering-differences_violin.png', width = 4, height = 4)
